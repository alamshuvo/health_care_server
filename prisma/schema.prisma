generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  password           String
  role               userRole
  needPasswordChange Boolean    @default(true)
  status             userStatus @default(ACTIVE)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  admin              Admin?
  doctor             Doctor?
  Patient            Patient?

  @@map("Users")
}

model Admin {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  profilePhoto  String?
  contactNumber String
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [email], references: [email])

  @@map("Admins")
}

model Doctor {
  id                  String               @id @default(uuid())
  name                String
  email               String               @unique
  profilePhoto        String?
  contactNumber       String
  adress              String?
  registrationNumber  String
  experience          Int                  @default(0)
  gender              Gender
  appointmentFee      Int
  qualification       String
  currentWorkingPlace String
  designation         String
  isDeleted           Boolean              @default(false)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  user                User                 @relation(fields: [email], references: [email])
  doctorSpecialities  DoctorSpecialities[]

  @@map("doctors")
}

model Patient {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String
  profilePhoto  String?
  contactNumber String?
  address       String?
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("patients")
}

model Specialties {
  id                 String               @id @default(uuid())
  title              String
  icon               String
  doctorSpecialities DoctorSpecialities[]

  @@map("specialties")
}

model DoctorSpecialities {
  specialitiesId String
  speciality     Specialties @relation(fields: [specialitiesId], references: [id])
  doctorId       String
  doctor         Doctor      @relation(fields: [doctorId], references: [id])

  @@id([specialitiesId, doctorId])
  @@map("doctor_specialities")
}

enum Gender {
  MALE
  FEMALE
}

enum userStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum userRole {
  SUPER_ADMIN
  DOCTOR
  ADMIN
  PATIENT
}
